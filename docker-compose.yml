version: '3.1'

services:
  postgres:
    image: postgres
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "keycloak"]
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    volumes:
      - type: tmpfs
        target: /var/lib/postgresql/data
        tmpfs:
          size: 100000000
    ports:
      - 5432:5432

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    command: ["start-dev", "--import-realm"]
    restart: unless-stopped
    environment:
      JAVA_OPTS_APPEND: "-Dkeycloak.profile=preview -Dkeycloak.profile.feature.scripts=enabled -Dkeycloak.profile.feature.token_exchange=enabled -Dkeycloak.profile.feature.admin_fine_grained_authz=enabled -Dkeycloak.profile.feature.impersonation=enabled"
      KC_FEATURES: account-api,account2,admin-api,admin2,authorization,ciba,client-policies,impersonation,js-adapter,par,step-up-authentication,web-authn,token-exchange,admin-fine-grained-authz
      KC_DB: postgres
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
      KC_DB_URL: "jdbc:postgresql://postgres:5432/keycloak"
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - 8180:8080
    volumes:
      - ./keycloak/config/:/opt/keycloak/data/import:ro
      - ./keycloak/themes/demo:/opt/keycloak/themes/demo

  adminer:
    image: adminer
    restart: always
    ports:
      - 8050:8080


#  auth-service:
#    depends_on:
#      - postgres
#      - keycloak
#    image: ghcr.io/camelotls/auth-service-poc:1.0-SNAPSHOT
#    restart: on-failure
#    ports:
#      - 8090:8090
#
#
#  resource-server:
#    depends_on:
#      - postgres
#      - keycloak
#    image: ghcr.io/camelotls/resource-server-poc:1.0-SNAPSHOT
#    restart: on-failure
#    ports:
#      - 8095:8095